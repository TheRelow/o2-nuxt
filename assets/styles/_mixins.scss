@mixin _1024 {
  @media (max-width: 1024px) {
    @content;
  }
}

@mixin _850 {
  @media (max-width: 850px) {
    @content;
  }
}

@mixin _600 {
  @media (max-width: 600px) {
    @content;
  }
}

@mixin _440 {
  @media (max-width: 440px) {
    @content;
  }
}

@mixin col($col: 4, $gap: 16px) {
  $col1: $col - 1;
  @if($col < 2) {
    $col1: $col;
  }
  width: unquote("calc(100%/") $col unquote("-") $gap unquote("/") $col unquote("*") $col1 unquote(")");
}

@mixin pseudo($pos: absolute, $display: block, $content: ''){
  content: $content;
  position: $pos;
  display: $display;
}

@mixin responsive-ratio($x,$y, $pseudo: false) {
  $padding: unquote( ( $y / $x ) * 100 + '%' );
  @if $pseudo {
    &:before {
      @include pseudo($pos: relative);
      width: 100%;
      padding-top: $padding;
    }
  } @else {
    padding-top: $padding;
  }
}

@mixin css-triangle($color: #000, $direction: down, $size: 6px, $position: absolute, $round: false){
  @include pseudo($pos: $position);
  width: 0;
  height: 0;
  @if $round {
    border-radius: 3px;
  }
  @if $direction == down {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-top: $size solid $color;
    margin-top: 0 - round( $size / 2.5 );
  } @else if $direction == up {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
    margin-bottom: 0 - round( $size / 2.5 );
  } @else if $direction == right {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
    margin-right: -$size;
  } @else if  $direction == left {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-right: $size solid $color;
    margin-left: -$size;
  }
}

@mixin input-placeholder {
  &.placeholder { @content; }
  &:-moz-placeholder { @content; }
  &::-moz-placeholder { @content; }
  &:-ms-input-placeholder { @content; }
  &::-webkit-input-placeholder { @content; }
}
